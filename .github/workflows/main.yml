name: 构建小米平板5 hyperOS-kernel

on:
  workflow_dispatch:

jobs:
  build:
    name: Build Kernel
    runs-on: ubuntu-22.04
    steps:

      - name: Get branch
        id: branch
        uses: tj-actions/branch-names@v8

      - name: Set SWAP
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 15

      - name: Setup environment
        run: |
          sudo apt-get update
          sudo apt install gcc-arm-linux-gnueabi
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository -y ppa:deadsnakes/ppa
          sudo apt-get update
          sudo apt-get install -y \
            git build-essential make bc python2.7 python3 \
            libncurses5-dev lib32z1-dev gcc-multilib g++-multilib \
            flex bison libssl-dev device-tree-compiler zip
          sudo ln -sf /usr/bin/python2.7 /usr/bin/python2
          mkdir -p $GITHUB_WORKSPACE/workdir
          echo "BUILD_TIME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV

      - name: Get toolchain
        run: |
          git clone https://github.com/kdrag0n/proton-clang.git -b 20210522 --depth 1 $GITHUB_WORKSPACE/workdir/clang

      - name: Get source
        run: |
          git clone --recursive https://github.com/Winkmoon/ShirokoNeko_kernel_nabu.git \
          -b KernelSU \
          --depth 1 $GITHUB_WORKSPACE/workdir/source

      - name: Install SukiSU
        run: |
          cd $GITHUB_WORKSPACE/workdir/source
          sed -i "\$s|echo \"\\\$res\"|echo \"-Xinran_StarBai_nabu\"|" ./scripts/setlocalversion
          rm -rf KernelSU
          curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s nongki
          cd ./KernelSU
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count main) + 10700)
          export KSU_VERSION=$KSU_VERSION
          sed -i "s/DKSU_VERSION=12800/DKSU_VERSION=$KSU_VERSION/" kernel/Makefile
          cd ..

          echo "CONFIG_MODULE_SIG=n" >> ./arch/arm64/configs/nabu_defconfig
          echo "CONFIG_MODULE_SIG_ALL=n" >> ./arch/arm64/configs/nabu_defconfig
          echo "CONFIG_KSU_TRACEPOINT_HOOK=y" >> ./arch/arm64/configs/nabu_defconfig
          echo "CONFIG_KPM=y" >> ./arch/arm64/configs/nabu_defconfig
          echo "CONFIG_KALLSYMS=y" >> ./arch/arm64/configs/nabu_defconfig
          echo "CONFIG_KALLSYMS_ALL=y" >> ./arch/arm64/configs/nabu_defconfig

      - name: Build kernel
        run: |
          export KBUILD_BUILD_USER=${{ github.actor }}
          export ARCH=arm64
          export KBUILD_BUILD_HOST=欣然love白
          export KBUILD_BUILD_USER=kuan-@Xinran_StarBai
          export PATH="$GITHUB_WORKSPACE/workdir/clang/bin/:$PATH"
          export CROSS_COMPILE_ARM32=arm-linux-gnueabi-
          export CROSS_COMPILE=aarch64-linux-gnu-
          cd $GITHUB_WORKSPACE/workdir/source
          make O=out nabu_defconfig CC=clang
          make -j$(nproc --all) O=out CC=clang LD=ld.lld

      - name: Verify output
        run: |
          if [ -f $GITHUB_WORKSPACE/workdir/source/out/arch/arm64/boot/Image ]; then
            echo "CHECK_FILE_IS_OK=true" >> $GITHUB_ENV
          else
            echo "Error: Kernel Image not generated!"
            exit 1
          fi

      - name: Package kernel
        if: env.CHECK_FILE_IS_OK == 'true'
        run: |
          rm -rf $GITHUB_WORKSPACE/workdir/ak3
          git clone https://github.com/Winkmoon/AnyKernel3.git $GITHUB_WORKSPACE/workdir/ak3
          if [ ! -f $GITHUB_WORKSPACE/workdir/source/out/arch/arm64/boot/Image ]; then
            echo "Error: Kernel Image missing during packaging!"
            exit 1
          fi
          cp $GITHUB_WORKSPACE/workdir/source/out/arch/arm64/boot/Image $GITHUB_WORKSPACE/workdir/ak3
          cd $GITHUB_WORKSPACE/workdir/ak3
          zip -r9 ./AnyKernel3-${{ env.BUILD_TIME }}.zip ./*
          if [ ! -f ./AnyKernel3-${{ env.BUILD_TIME }}.zip ]; then
            echo "Error: Zip package not generated!"
            echo "Current files in ak3 directory:"
            ls -la
            exit 1
          fi
          echo "Successfully generated zip package:"
          ls -la ./AnyKernel3-${{ env.BUILD_TIME }}.zip

      - name: Upload artifacts (备份)
        uses: actions/upload-artifact@v4
        with:
          name: Kernel-${{ env.BUILD_TIME }}
          path: ${{ github.workspace }}/workdir/ak3/*.zip
          if-no-files-found: error

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: kernel-${{ env.BUILD_TIME }}
          release_name: 小米平板5 HyperOS 内核 ${{ env.BUILD_TIME }}
          draft: false
          prerelease: false  # 是否为预发布（false = 正式版，true = 测试版）
          body: |
            ## 小米平板5 (nabu) HyperOS 内核构建
            - 构建时间：${{ env.BUILD_TIME }}
            - 集成特性：SukiSU、KSU Tracepoint Hook、KPM
            - 打包工具：AnyKernel3
            - 适用系统：MIUI13-HyperOS
            - 构建环境：Ubuntu 22.04 + Proton Clang 20210522

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/workdir/ak3/AnyKernel3-${{ env.BUILD_TIME }}.zip
          asset_name: AnyKernel3-${{ env.BUILD_TIME }}.zip
          asset_content_type: application/zip
